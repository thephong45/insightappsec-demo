<?php
include 'database/config.php';

$error = "";
$success = "";

function createSlug($string) {
    $table = array(
        // Character mapping for Vietnamese characters
        'a'=>'a','√†'=>'a','√°'=>'a','·∫°'=>'a','·∫£'=>'a','√£'=>'a','√¢'=>'a','·∫ß'=>'a','·∫•'=>'a','·∫≠'=>'a','·∫©'=>'a','·∫´'=>'a','ƒÉ'=>'a','·∫±'=>'a','·∫Ø'=>'a','·∫∑'=>'a','·∫≥'=>'a','·∫µ'=>'a',
        'e'=>'e','√®'=>'e','√©'=>'e','·∫π'=>'e','·∫ª'=>'e','·∫Ω'=>'e','√™'=>'e','·ªÅ'=>'e','·∫ø'=>'e','·ªá'=>'e','·ªÉ'=>'e','·ªÖ'=>'e',
        'i'=>'i','√¨'=>'i','√≠'=>'i','·ªã'=>'i','·ªâ'=>'i','ƒ©'=>'i',
        'o'=>'o','√≤'=>'o','√≥'=>'o','·ªç'=>'o','·ªè'=>'o','√µ'=>'o','√¥'=>'o','·ªì'=>'o','·ªë'=>'o','·ªô'=>'o','·ªï'=>'o','·ªó'=>'o','∆°'=>'o','·ªù'=>'o','·ªõ'=>'o','·ª£'=>'o','·ªü'=>'o','·ª°'=>'o',
        'u'=>'u','√π'=>'u','√∫'=>'u','·ª•'=>'u','·ªß'=>'u','≈©'=>'u','∆∞'=>'u','·ª´'=>'u','·ª©'=>'u','·ª±'=>'u','·ª≠'=>'u','·ªØ'=>'u',
        'y'=>'y','·ª≥'=>'y','√Ω'=>'y','·ªµ'=>'y','·ª∑'=>'y','·ªπ'=>'y',
        'd'=>'d','ƒë'=>'d',
        'A'=>'a','√Ä'=>'a','√Å'=>'a','·∫†'=>'a','·∫¢'=>'a','√É'=>'a','√Ç'=>'a','·∫¶'=>'a','·∫§'=>'a','·∫¨'=>'a','·∫®'=>'a','·∫™'=>'a','ƒÇ'=>'a','·∫∞'=>'a','·∫Æ'=>'a','·∫∂'=>'a','·∫≤'=>'a','·∫¥'=>'a',
        'E'=>'e','√à'=>'e','√â'=>'e','·∫∏'=>'e','·∫∫'=>'e','·∫º'=>'e','√ä'=>'e','·ªÄ'=>'e','·∫æ'=>'e','·ªÜ'=>'e','·ªÇ'=>'e','·ªÑ'=>'e',
        'I'=>'i','√å'=>'i','√ç'=>'i','·ªä'=>'i','·ªà'=>'i','ƒ®'=>'i',
        'O'=>'o','√í'=>'o','√ì'=>'o','·ªå'=>'o','·ªé'=>'o','√ï'=>'o','√î'=>'o','·ªí'=>'o','·ªê'=>'o','·ªò'=>'o','·ªî'=>'o','·ªñ'=>'o','∆†'=>'o','·ªú'=>'o','·ªö'=>'o','·ª¢'=>'o','·ªû'=>'o','·ª†'=>'o',
        'U'=>'u','√ô'=>'u','√ö'=>'u','·ª§'=>'u','·ª¶'=>'u','≈®'=>'u','∆Ø'=>'u','·ª™'=>'u','·ª®'=>'u','·ª∞'=>'u','·ª¨'=>'u','·ªÆ'=>'u',
        'Y'=>'y','·ª≤'=>'y','√ù'=>'y','·ª¥'=>'y','·ª∂'=>'y','·ª∏'=>'y',
        'D'=>'d','ƒê'=>'d'
    );
    
    // Replace accented characters with non-accented equivalents
    $string = strtr($string, $table);
    // Replace spaces with hyphens
    $slug = preg_replace('/\s+/', '-', $string);
    // Remove invalid characters
    $slug = preg_replace('/[^A-Za-z0-9\-]/', '', $slug);
    // Replace multiple hyphens with a single hyphen
    $slug = preg_replace('/-+/', '-', $slug);
    // Convert to lowercase
    $slug = strtolower($slug);

    return $slug;
}


function isDuplicateNews($conn, $slug) {
    $sql = "SELECT id FROM news WHERE slug = ?";
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("s", $slug);
    $stmt->execute();
    $stmt->store_result();
    return $stmt->num_rows > 0;
}

if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $title = htmlspecialchars(trim($_POST['title']));
    $slug = createSlug($title);
    $content = htmlspecialchars($_POST['content'], ENT_QUOTES, 'UTF-8');
    $thumbnail = htmlspecialchars(trim($_POST['thumbnail']));

    if (empty($title)) {
        $error = "Vui l√≤ng nh·∫≠p ƒë·∫ßy ƒë·ªß th√¥ng tin";
    } else {
        // Check for duplicate slug
        while (isDuplicateNews($conn, $slug)) {
            $slug .= rand(100000, 999999);
        }

        $sql = "INSERT INTO news (title, slug, content, thumbnail) VALUES (?, ?, ?, ?)";
        $stmt = $conn->prepare($sql);
        $stmt->bind_param("ssss", $title, $slug, $content, $thumbnail);

        if ($stmt->execute()) {
            $news_id = $stmt->insert_id;
            $news_url = $slug;
            $_SESSION['success'] = "B√†i vi·∫øt ƒë√£ ƒë∆∞·ª£c t·∫°o th√†nh c√¥ng, vui l√≤ng xem t·∫°i ƒë√¢y üëâ <a href='$news_url'>Xem B√†i Vi·∫øt</a>";
            header("Location: /");
            exit;
        } else {
            $error = "Error: " . $stmt->error;
        }
    }
}
    // ƒê√≥ng k·∫øt n·ªëi
$conn->close();
?>

<?php
include 'layouts/header.php';
?>
<!-- Content Wrapper. Contains page content -->
<div class="content-wrapper">
    <!-- Content Header (Page header) -->
    <section class="content-header">
      <h1>
      Vi·∫øt B√°o Pr
        <small>T·∫°o b√†i vi·∫øt pr b·∫£n th√¢n</small>
      </h1>
      <ol class="breadcrumb">
        <li><a href="/"><i class="fa fa-dashboard"></i> Home</a></li>
        <li class="active">Vi·∫øt B√°o Pr</li>
      </ol>
    </section>
    <div class="container">
    <?php if (!empty($error)): ?>
            <div class="alert alert-danger">
                <?php echo $error; ?>
            </div>
        <?php endif; ?>
        <?php if (!empty($_SESSION['success'])): ?>
            <div class="alert alert-success">
                <?php echo $_SESSION['success']; unset($_SESSION['success']); ?>
            </div>
        <?php endif; ?>
        <h1 class="my-4">Vi·∫øt B√°o Pr</h1>
        <form action="" method="post">
            <div class="form-group">
                <label for="thumbnail">·∫¢nh b√¨a:</label>
                <input type="text" class="form-control" id="thumbnail" name="thumbnail">
                <input type="file" class="form-control-file" id="thumbnail-upload" name="thumbnail-upload" accept="image/png, image/gif, image/jpeg">
            </div>
            <div class="form-group">
                <label for="title">Ti√™u ƒë·ªÅ:</label>
                <input type="text" class="form-control" id="title" name="title" required>
            </div>
            <div class="form-group">
                <label for="content">N·ªôi dung:</label>
                <textarea class="form-control" id="content" name="content" rows="20"></textarea>
            </div>
            <button type="submit" class="btn btn-primary">T·∫†O B√ÄI VI·∫æT</button>
        </form>
    </div>
</div>
<?php
include 'layouts/footer.php';
?>

<script>
document.getElementById('thumbnail-upload').addEventListener('change', function (e) {
    var formData = new FormData();
    formData.append('file', e.target.files[0]);

    fetch('upload_handler.php', {
        method: 'POST',
        body: formData
    }).then(response => response.text()).then(url => {
        document.getElementById('thumbnail').value = url;
    }).catch(error => console.error('Error:', error));
});
</script>

<script>
tinymce.init({
    selector: '#content',
    plugins: [
        'advlist', 'autolink', 'link', 'image', 'lists', 'charmap', 'preview', 'anchor', 'pagebreak',
        'searchreplace', 'wordcount', 'visualblocks', 'visualchars', 'code', 'fullscreen', 'insertdatetime',
        'media', 'table', 'emoticons', 'help'
    ],
    toolbar: 'undo redo | styles | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | link image | print preview media | forecolor backcolor emoticons',
    menu: {
        favs: { title: 'My Favorites', items: 'code visualaid | searchreplace | emoticons' }
    },
    menubar: 'favs file edit view insert format tools table help',
    setup: function(editor) {
        editor.on('change', function() {
            editor.save();
        });
    },
    images_upload_handler: function (blobInfo, success, failure) {
        var xhr, formData;
        xhr = new XMLHttpRequest();
        xhr.withCredentials = false;
        xhr.open('POST', 'upload_tinymce.php');

        xhr.onload = function() {
            var json;
            if (xhr.status != 200) {
                failure('HTTP Error: ' + xhr.status);
                return;
            }
            json = JSON.parse(xhr.responseText);
            if (!json || typeof json.location != 'string') {
                failure('Invalid JSON: ' + xhr.responseText);
                return;
            }
            success(json.location);
        };

        formData = new FormData();
        formData.append('file', blobInfo.blob(), blobInfo.filename());
        xhr.send(formData);
    }
});


</script>
